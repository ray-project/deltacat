name: CI
on:
    pull_request:
        types:
            - opened
            - edited
            - synchronize
            - reopened
        branches: [main, phash_main]
jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: Set up Python 3.7
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7
            - name: Linting
              run: |
                  python -m pip install --upgrade pip
                  if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi
                  pre-commit run --all-files
    build-n-test:
        name: Build and test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.7", "3.8", "3.9", "3.10"]
        timeout-minutes: 10
        steps:
            - name: "checkout repository"
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }} (minimum supported python version for deltaCAT is 3.7)
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install pypa/build
              run: >-
                  python -m
                  pip install
                  build
                  --user
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  if [ -f benchmark-requirements.txt ]; then pip install -r benchmark-requirements.txt; fi
            - name: Run unit tests
              run: >-
                  python -m pytest --benchmark-json output.json
            - name: Store benchmark results
              uses: benchmark-action/github-action-benchmark@v1
              with:
                tool: 'pytest'
                output-file-path: output.json
                # GitHub API token to make a commit comment
                github-token: ${{ secrets.GITHUB_TOKEN }}
                # Enable alert commit comment
                comment-on-alert: true
                # Enable Job Summary for PRs
                summary-always: true
